<Page x:Class="CodeLingo.Lesson7.Page19"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CodeLingo.Lesson7"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="Page19" Width="448" Height="208">

    <Grid>
        <Label x:Name="Subtitle" Content="Variable Scope" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bebas Kai" FontSize="20" Margin="-1,-2,0,0" FontWeight="Bold"/>
        <TextBlock x:Name="Paragraph" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Margin="6,26,0,0" FontFamily="Bebas Kai" FontSize="16" Width="420" Grid.RowSpan="2"><Run Text="In the last example you can see that var_b was inaccessible from outside of the curly braces, as was var_a. So how do you keep the value outside of the curly braces?"/><LineBreak/><LineBreak/><Run Text="This can be solved by putting the variables outside at a global level. When placed at a global level, all code within the source file can access the variables. While this seems convenient, using global variables should be avoided because they can be changed anywhere in the code. Variables declared within braces have a local scope. "/><LineBreak/><Run/></TextBlock>


    </Grid>
</Page>
